// Copyright ©2022, GM Consult (Pty) Ltd.
// BSD 3-Clause License
// All rights reserved

import 'package:hive_text_index/hive_text_index.dart';
import 'package:text_indexing/text_indexing.dart';
import 'package:text_indexing/type_definitions.dart';
import 'package:hive/hive.dart';
import 'package:gmconsult_dev/gmconsult_dev.dart';
import 'dart:io';

class HashTagAnalyzer extends English {
  static const kZones = {'name': 1.0, 'description': 0.5};

  static const kK = 3;

  static const kStrategy = TokenizingStrategy.keyWords;

  static const kNGramRange = NGramRange(1, 1);

  static const kIndexName = 'hashtags';

  bool _isSymbol(String term) =>
      term.toUpperCase() == term ||
      term.contains(RegExp(r'(?<=\w)[:\-\\\/]+(?=\w)'));

  @override
  TermFilter get termFilter =>
      (term) => _isSymbol(term) ? {term} : super.termFilter(term)
        ..removeWhere(
            (element) => termExceptions.containsKey(element.toLowerCase()));

  @override
  Set<String> get stopWords => English.analyzer.stopWords;

  @override
  Stemmer get stemmer => (term) =>
      _isSymbol(term) ? term : term.toLowerCase().replaceAll("'s", '').trim();

  @override
  Map<String, String> get abbreviations => {};

  @override
  CharacterFilter get characterFilter =>
      (term) => _isSymbol(term) ? term : super.characterFilter(term);

  @override
  Lemmatizer get lemmatizer => (term) => term;

  @override
  Map<String, String> get termExceptions => {
        // '': '',
        // '': '',
        // '': '',
        // '': '',
        'new york stock': '',
        'york stock': '',
        'securities listed': '',
        'stock exchange': '',
        'dow jones': '',
        'dow': '',
        'new york stock exchange': '',
        'nasdaq': '',
        'listed': '',
        'sheets': '',
        'pink': '',
        'dollar': '',
        'exchange': '',
        'rate': '',
        'crypto exchange': '',
        'exchange rate': '',
        'securities': '',
        'pink sheets': '',
        'crypto': '',
        '-': '',
        '[erc20]': '',
        '[eth]': '',
        '[waves]': '',
        '1': '',
        '100': '',
        '101529"zone': '',
        '13': '',
        '2': '',
        '20': '',
        '2026': '',
        '2028': '',
        '2031': '',
        '2037': '',
        '2061': '',
        '21': '',
        '24': '',
        '3': '',
        '30': '',
        '4': '',
        '4125%': '',
        '425%': '',
        '5': '',
        '510%': '',
        '5125': '',
        '575%': '',
        '6': '',
        '600': '',
        '625%': '',
        '6375%': '',
        '650%': '',
        '66': '',
        '675%': '',
        '725%': '',
        '875%': '',
        '887': '',
        '900%': '',
        'a/s': '',
        'ab': '',
        'abp': '',
        'acb': '',
        'acquisi': '',
        'acquisitions': '',
        'agricolas': '',
        'akron': '',
        'aktien': '',
        'aktiengesellschaft': '',
        'allianceinc': '',
        'amer': '',
        'anonyme': '',
        'appomattox': '',
        'ariary': '',
        'as': '',
        'a-s': '',
        'association': '',
        'atom': '',
        'authority': '',
        'b2bcoin': '',
        'bakkafrost': '',
        'banccorp': '',
        'banc-corp': '',
        'bancompany': '',
        'bancorp-de': '',
        'bancorp-in': '',
        'bancorporation': '',
        'bancshares': '',
        'bank-ca': '',
        'bankers': '',
        'bankshares': '',
        'bank-the': '',
        'bceao': '',
        'beac': '',
        'bep2': '',
        'berhad': '',
        'bermuda': '',
        'biologics': '',
        'birr': '',
        'bits': '',
        'block': '',
        'blocks': '',
        'botetourt': '',
        'brands': '',
        'brivision': '',
        'buy-wr': '',
        'c': '',
        'caca': '',
        'calif': '',
        'car': '',
        'cash': '',
        'cedi': '',
        'cemetery': '',
        'certificates': '',
        'champcoin': '',
        'chile': '',
        'clarita': '',
        'classic': '',
        'cloud': '',
        'club': '',
        'co': '',
        'coins': '',
        'colon': '',
        'coltd': '',
        'commo': '',
        'commonwealth': '',
        'companies': '',
        'company': '',
        'coop': '',
        'cor': '',
        'corp': '',
        'corpbanca': '',
        'corp-de': '',
        'corp-ma': '',
        'corp-md': '',
        'corp-nv': '',
        'corp-ny': '',
        'corpo': '',
        'corpor': '',
        'corporat': '',
        'corporation': '',
        'corp-pa': '',
        'corp-taiwan': '',
        'corp-the': '',
        'corp-va': '',
        'corp-wa': '',
        'co-the': '',
        'crystals': '',
        'cypherfunks': '',
        'dalarnia': '',
        'dao': '',
        'dark': '',
        'datacoin': '',
        'de': '',
        'debentures': '',
        'decorum': '',
        'dep': '',
        'depo': '',
        'depos': '',
        'deposi': '',
        'deposita': '',
        'depositar': '',
        'depositary': '',
        'depositor': '',
        'dinar': '',
        'dirham': '',
        'distribuicao': '',
        'doctor': '',
        'dollars': '',
        'dram': '',
        'ecoin': '',
        'emark': '',
        'end': '',
        'energia': '',
        'engines': '',
        'enter': '',
        'enterprises': '',
        'ericsson': '',
        'erush': '',
        'escudo': '',
        'etf': '',
        'etn': '',
        'etns': '',
        'etn-ubs': '',
        'etp': '',
        'fcb': '',
        'ferry': '',
        'fixed-to-f': '',
        'floki': '',
        'florida': '',
        'franc': '',
        'fsb': '',
        'fund': '',
        'funding': '',
        'fund-the': '',
        'futures': '',
        'game': '',
        'gerais': '',
        'god': '',
        'governance': '',
        'gram': '',
        'graph': '',
        'guilder': '',
        'h': '',
        'hashgraph': '',
        'hertfordshire': '',
        'holding': '',
        'holdings': '',
        'i': '',
        'i-b': '',
        'ii': '',
        'iii': '',
        'imports': '',
        'inc': '',
        'inc-ar': '',
        'inc-ca': '',
        'inc-canada': '',
        'inc-china': '',
        'inc-co': '',
        'inc-de': '',
        'inc-fund': '',
        'inc-ga': '',
        'inc-il': '',
        'inc-in': '',
        'inc-ky': '',
        'inc-la': '',
        'inc-ma': '',
        'inc-md': '',
        'inc-me': '',
        'inc-mo': '',
        'inc-ny': '',
        'inc-oh': '',
        'inc-ok': '',
        'incorporated': '',
        'inc-the': '',
        'inc-tn': '',
        'inc-tx': '',
        'inc-wi': '',
        'inc-wv': '',
        'indiana': '',
        'industries': '',
        'initiative': '',
        'institutional': '',
        'interest': '',
        'intermediate': '',
        'internationalinc': '',
        'international-us': '',
        'inu': '',
        'iv': '',
        'jersey': '',
        'kgaa': '',
        'kip': '',
        'kk': '',
        'koin': '',
        'kolect': '',
        'kong': '',
        'koruna': '',
        'krona': '',
        'krone': '',
        'ks': '',
        'kwacha': '',
        'lab': '',
        'laboratories': '',
        'laboratories-adr': '',
        'ledger': '',
        'leisure': '',
        'leu': '',
        'lev': '',
        'limited': '',
        'lira': '',
        'lite': '',
        'llc': '',
        'l\'odet': '',
        'lp': '',
        'lp-ma': '',
        'lp-the': '',
        'ltd': '',
        'ltd-bermuda': '',
        'ltd-canada': '',
        'ltd-israel': '',
        'ltd-singapore': '',
        'ltd-the': '',
        'lyte': '',
        'ma': '',
        'mac': '',
        'machine': '',
        'mae': '',
        'maine': '',
        'management': '',
        'manat': '',
        'manda': '',
        'mandat': '',
        'mandatorily': '',
        'maria': '',
        'metical': '',
        'montreal': '',
        'múltiple': '',
        'municipals': '',
        'mwat': '',
        'na': '',
        'nc': '',
        'nev': '',
        'nj': '',
        'non-': '',
        'norte': '',
        'not': '',
        'notary': '',
        'note': '',
        'notes': '',
        'nv': '',
        'ny': '',
        'object': '',
        'omani': '',
        'oro': '',
        'otcm': '',
        'ounce': '',
        'oyj': '',
        'ozk': '',
        'p': '',
        'pai': '',
        'paulo': '',
        'pay': '',
        'pbc': '',
        'people': '',
        'pfd': '',
        'pharmaceuticals': '',
        'pjsc': '',
        'platform': '',
        'plc': '',
        'portfolio': '',
        'pos': '',
        'potion': '',
        'princeton-the': '',
        'properties': '',
        'protocol': '',
        'pyr': '',
        'rat': '',
        'reale': '',
        'reit': '',
        'reloaded': '',
        'renminbi': '',
        'rentcorp': '',
        'resettab': '',
        'residences': '',
        'residential': '',
        'return': '',
        'rico': '',
        'rights': '',
        'ringgit': '',
        'riyal': '',
        'rlc': '',
        'rtd': '',
        'ruble': '',
        'rupees': '',
        's': '',
        'sa': '',
        'saa': '',
        'sa-brazil': '',
        'sae': '',
        'sai': '',
        'sal': '',
        'sandbox': '',
        'santand': '',
        'sa-nv': '',
        'sas': '',
        'savings': '',
        'sciences': '',
        'scotia-the': '',
        'se': '',
        'ser': '',
        'seri': '',
        'serie': '',
        'series': '',
        'services': '',
        'sgps': '',
        'share': '',
        'shares': '',
        'sheqel': '',
        'siriusxm': '',
        'sirketi': '',
        'soberano': '',
        'societas': '',
        'spa': '',
        'spac': '',
        'spot': '',
        'stake': '',
        'states': '',
        'storage': '',
        'su': '',
        'subord': '',
        'subordinat': '',
        'subordinate': '',
        'sum': '',
        'sv': '',
        'system': '',
        'systems': '',
        'tas': '',
        'tbk': '',
        'tcpr': '',
        'technologies': '',
        'terrafina': '',
        'tex': '',
        'therapeutics': '',
        'tin': '',
        'token': '',
        'tokens': '',
        'tr': '',
        'trump': '',
        'trust-the': '',
        'units': '',
        'uruguayo': '',
        'ut': '',
        'utica': '',
        'v2': '',
        'va': '',
        'vaudoise': '',
        'ventures': '',
        'vi': '',
        'vii': '',
        'viii': '',
        'voltage': '',
        'vr': '',
        'when-issued': '',
        'works': '',
        'wyoming': '',
        'xiii': '',
        'xngs': '',
        'xnys': '',
        'y': '',
        'zedong': '',
        'all': '',
        'ang': '',
        'aoa': '',
        'bats': '',
        'bdt': '',
        'bitcny': '',
        'bzd': '',
        'cnh': '',
        'cup': '',
        'djf': '',
        'dop': '',
        'dzd': '',
        'etb': '',
        'gmd': '',
        'gnf': '',
        'gtq': '',
        'hnl': '',
        'hrk': '',
        'htg': '',
        'iexg': '',
        'jmd': '',
        'kes': '',
        'khr': '',
        'kmf': '',
        'lak': '',
        'lbp': '',
        'lkr': '',
        'lsl': '',
        'lyd': '',
        'mmk': '',
        'mnt': '',
        'mop': '',
        'mvr': '',
        'mwk': '',
        'mzn': '',
        'ngn': '',
        'npr': '',
        'pab': '',
        'pgk': '',
        'rsd': '',
        'rwf': '',
        'sdg': '',
        'std': '',
        'szl': '',
        'taud': '',
        'tzs': '',
        'ugx': '',
        'vuv': '',
        'xaf': '',
        'xbru': '',
        'xcd': '',
        'xof': '',
        'xpf': '',
        'yer': '',
        'zmw': '',
      };

  // static const kStopWords = {
  //   'inc',
  //   'common',
  //   'common stock',
  //   'company',
  //   'stock',
  //   'corp',
  //   'trust',
  //   'limited',
  //   'dollar',
  //   'holdings',
  //   'international',
  //   '-',
  //   '[erc20]',
  //   '[eth]',
  //   '[waves]',
  //   '1',
  //   '100',
  //   '101529"zone',
  //   '13',
  //   '2',
  //   '20',
  //   '2026',
  //   '2028',
  //   '2031',
  //   '2037',
  //   '2061',
  //   '21',
  //   '24',
  //   '3',
  //   '30',
  //   '4',
  //   '4125%',
  //   '425%',
  //   '5',
  //   '510%',
  //   '5125',
  //   '575%',
  //   '6',
  //   '600',
  //   '625%',
  //   '6375%',
  //   '650%',
  //   '66',
  //   '675%',
  //   '725%',
  //   '875%',
  //   '887',
  //   '900%',
  //   'a/s',
  //   'ab',
  //   'abp',
  //   'acb',
  //   'acquisi',
  //   'acquisitions',
  //   'agricolas',
  //   'akron',
  //   'aktien',
  //   'aktiengesellschaft',
  //   'allianceinc',
  //   'amer',
  //   'anonyme',
  //   'appomattox',
  //   'ariary',
  //   'as',
  //   'a-s',
  //   'association',
  //   'atom',
  //   'authority',
  //   'b2bcoin',
  //   'bakkafrost',
  //   'banccorp',
  //   'banc-corp',
  //   'bancompany',
  //   'bancorp-de',
  //   'bancorp-in',
  //   'bancorporation',
  //   'bancshares',
  //   'bank-ca',
  //   'bankers',
  //   'bankshares',
  //   'bank-the',
  //   'bceao',
  //   'beac',
  //   'bep2',
  //   'berhad',
  //   'bermuda',
  //   'biologics',
  //   'birr',
  //   'bits',
  //   'block',
  //   'blocks',
  //   'botetourt',
  //   'brands',
  //   'brivision',
  //   'buy-wr',
  //   'c',
  //   'caca',
  //   'calif',
  //   'car',
  //   'cash',
  //   'cedi',
  //   'cemetery',
  //   'certificates',
  //   'champcoin',
  //   'chile',
  //   'clarita',
  //   'classic',
  //   'cloud',
  //   'club',
  //   'co',
  //   'coins',
  //   'colon',
  //   'coltd',
  //   'commo',
  //   'commonwealth',
  //   'companies',
  //   'coop',
  //   'cor',
  //   'corpbanca',
  //   'corp-de',
  //   'corp-ma',
  //   'corp-md',
  //   'corp-nv',
  //   'corp-ny',
  //   'corpo',
  //   'corpor',
  //   'corporat',
  //   'corporation',
  //   'corp-pa',
  //   'corp-taiwan',
  //   'corp-the',
  //   'corp-va',
  //   'corp-wa',
  //   'co-the',
  //   'crystals',
  //   'cypherfunks',
  //   'dalarnia',
  //   'dao',
  //   'dark',
  //   'datacoin',
  //   'de',
  //   'debentures',
  //   'decorum',
  //   'dep',
  //   'depo',
  //   'depos',
  //   'deposi',
  //   'deposita',
  //   'depositar',
  //   'depositary',
  //   'depositor',
  //   'dinar',
  //   'dirham',
  //   'distribuicao',
  //   'doctor',
  //   'dollars',
  //   'dram',
  //   'ecoin',
  //   'emark',
  //   'end',
  //   'energia',
  //   'engines',
  //   'enter',
  //   'enterprises',
  //   'ericsson',
  //   'erush',
  //   'escudo',
  //   'etf',
  //   'etn',
  //   'etns',
  //   'etn-ubs',
  //   'etp',
  //   'fcb',
  //   'ferry',
  //   'fixed-to-f',
  //   'floki',
  //   'florida',
  //   'franc',
  //   'fsb',
  //   'fund',
  //   'funding',
  //   'fund-the',
  //   'futures',
  //   'game',
  //   'gerais',
  //   'god',
  //   'governance',
  //   'gram',
  //   'graph',
  //   'guilder',
  //   'h',
  //   'hashgraph',
  //   'hertfordshire',
  //   'holding',
  //   'i',
  //   'i-b',
  //   'ii',
  //   'iii',
  //   'imports',
  //   'inc-ar',
  //   'inc-ca',
  //   'inc-canada',
  //   'inc-china',
  //   'inc-co',
  //   'inc-de',
  //   'inc-fund',
  //   'inc-ga',
  //   'inc-il',
  //   'inc-in',
  //   'inc-ky',
  //   'inc-la',
  //   'inc-ma',
  //   'inc-md',
  //   'inc-me',
  //   'inc-mo',
  //   'inc-ny',
  //   'inc-oh',
  //   'inc-ok',
  //   'incorporated',
  //   'inc-the',
  //   'inc-tn',
  //   'inc-tx',
  //   'inc-wi',
  //   'inc-wv',
  //   'indiana',
  //   'industries',
  //   'initiative',
  //   'institutional',
  //   'interest',
  //   'intermediate',
  //   'internationalinc',
  //   'international-us',
  //   'inu',
  //   'iv',
  //   'jersey',
  //   'kgaa',
  //   'kip',
  //   'kk',
  //   'koin',
  //   'kolect',
  //   'kong',
  //   'koruna',
  //   'krona',
  //   'krone',
  //   'ks',
  //   'kwacha',
  //   'lab',
  //   'laboratories',
  //   'laboratories-adr',
  //   'ledger',
  //   'leisure',
  //   'leu',
  //   'lev',
  //   'lira',
  //   'lite',
  //   'llc',
  //   'l\'odet',
  //   'lp',
  //   'lp-ma',
  //   'lp-the',
  //   'ltd',
  //   'ltd-bermuda',
  //   'ltd-canada',
  //   'ltd-israel',
  //   'ltd-singapore',
  //   'ltd-the',
  //   'lyte',
  //   'ma',
  //   'mac',
  //   'machine',
  //   'mae',
  //   'maine',
  //   'management',
  //   'manat',
  //   'manda',
  //   'mandat',
  //   'mandatorily',
  //   'maria',
  //   'metical',
  //   'montreal',
  //   'múltiple',
  //   'municipals',
  //   'mwat',
  //   'na',
  //   'nc',
  //   'nev',
  //   'nj',
  //   'non-',
  //   'norte',
  //   'not',
  //   'notary',
  //   'note',
  //   'notes',
  //   'nv',
  //   'ny',
  //   'object',
  //   'omani',
  //   'oro',
  //   'otcm',
  //   'ounce',
  //   'oyj',
  //   'ozk',
  //   'p',
  //   'pai',
  //   'paulo',
  //   'pay',
  //   'pbc',
  //   'people',
  //   'pfd',
  //   'pharmaceuticals',
  //   'pjsc',
  //   'platform',
  //   'plc',
  //   'portfolio',
  //   'pos',
  //   'potion',
  //   'princeton-the',
  //   'properties',
  //   'protocol',
  //   'pyr',
  //   'rat',
  //   'reale',
  //   'reit',
  //   'reloaded',
  //   'renminbi',
  //   'rentcorp',
  //   'resettab',
  //   'residences',
  //   'residential',
  //   'return',
  //   'rico',
  //   'rights',
  //   'ringgit',
  //   'riyal',
  //   'rlc',
  //   'rtd',
  //   'ruble',
  //   'rupees',
  //   's',
  //   'sa',
  //   'saa',
  //   'sa-brazil',
  //   'sae',
  //   'sai',
  //   'sal',
  //   'sandbox',
  //   'santand',
  //   'sa-nv',
  //   'sas',
  //   'savings',
  //   'sciences',
  //   'scotia-the',
  //   'se',
  //   'ser',
  //   'seri',
  //   'serie',
  //   'series',
  //   'services',
  //   'sgps',
  //   'share',
  //   'shares',
  //   'sheqel',
  //   'siriusxm',
  //   'sirketi',
  //   'soberano',
  //   'societas',
  //   'spa',
  //   'spac',
  //   'spot',
  //   'stake',
  //   'states',
  //   'storage',
  //   'su',
  //   'subord',
  //   'subordinat',
  //   'subordinate',
  //   'sum',
  //   'sv',
  //   'system',
  //   'systems',
  //   'tas',
  //   'tbk',
  //   'tcpr',
  //   'technologies',
  //   'terrafina',
  //   'tex',
  //   'therapeutics',
  //   'tin',
  //   'token',
  //   'tokens',
  //   'tr',
  //   'trump',
  //   'trust-the',
  //   'units',
  //   'uruguayo',
  //   'ut',
  //   'utica',
  //   'v2',
  //   'va',
  //   'vaudoise',
  //   'ventures',
  //   'vi',
  //   'vii',
  //   'viii',
  //   'voltage',
  //   'vr',
  //   'when-issued',
  //   'works',
  //   'wyoming',
  //   'xiii',
  //   'xngs',
  //   'xnys',
  //   'y',
  //   'zedong',
  //   'all',
  //   'ang',
  //   'aoa',
  //   'bats',
  //   'bdt',
  //   'bitcny',
  //   'bzd',
  //   'cnh',
  //   'cup',
  //   'djf',
  //   'dop',
  //   'dzd',
  //   'etb',
  //   'gmd',
  //   'gnf',
  //   'gtq',
  //   'hnl',
  //   'hrk',
  //   'htg',
  //   'iexg',
  //   'jmd',
  //   'kes',
  //   'khr',
  //   'kmf',
  //   'lak',
  //   'lbp',
  //   'lkr',
  //   'lsl',
  //   'lyd',
  //   'mmk',
  //   'mnt',
  //   'mop',
  //   'mvr',
  //   'mwk',
  //   'mzn',
  //   'ngn',
  //   'npr',
  //   'pab',
  //   'pgk',
  //   'rsd',
  //   'rwf',
  //   'sdg',
  //   'std',
  //   'szl',
  //   'taud',
  //   'tzs',
  //   'ugx',
  //   'vuv',
  //   'xaf',
  //   'xbru',
  //   'xcd',
  //   'xof',
  //   'xpf',
  //   'yer',
  //   'zmw',
  // };

}

/// Hydrates a [JsonDataService] with a large dataset of securities.
Future<JsonDataService<Box<String>>> get _hashtagsService async {
  final Box<String> dataStore = await Hive.openBox('hashtags');
  return HiveJsonService(dataStore);
}

class HashTagIndex extends HiveTextIndexBase {
  //

  static String get kPath => '${Directory.current.path}\\dev\\data';

  static Future<void> buildIndex() async {
    Hive.init(kPath);
    final service = await _hashtagsService;
    final index = await HashTagIndex.hydrate();
    await index.clear();
    final iMindex = InMemoryIndex(
        collectionSize: service.dataStore.length,
        analyzer: index.analyzer,
        nGramRange: HashTagAnalyzer.kNGramRange,
        k: HashTagAnalyzer.kK,
        zones: HashTagAnalyzer.kZones,
        strategy: HashTagAnalyzer.kStrategy);
    ;
    final indexer = TextIndexer(iMindex);
    final keys = service.dataStore.keys.map((e) => e.toString()).toList();
    var i = 0;
    final start = DateTime.now();
    // keys = keys.sublist(16600);
    PostingsMap lastPostingsMap = {};
    await Future.forEach(keys, (String key) async {
      final json = await service.read(key);
      if (json != null) {
        final name = json['name'].toString().toLowerCase();
        if (name.contains('intel corp')) {
          print(json);
        }
        lastPostingsMap = await indexer.indexJson(key, json);
      }
      final l = await iMindex.vocabularyLength;

      i++;
      if (i.remainder(100) == 0) {
        final dT = DateTime.now().difference(start).inSeconds;
        print('Indexed $i hashTags in ${dT.toStringAsFixed(0)} seconds. '
            'Found $l terms.');
        print(lastPostingsMap.keys);
      }
    });

    await index.upsertDictionary(iMindex.dictionary);
    await index.upsertPostings(iMindex.postings);
    await index.upsertKGramIndex(iMindex.kGramIndex);
    await index.upsertKeywordPostings(iMindex.keywordPostings);
    await service.close();

    await index.close();
  }

  static Future<HashTagIndex> hydrate() async {
    final service = await _hashtagsService;
    Future<int> collectionSizeLoader() async => service.dataStore.length;
    final retVal = HashTagIndex._(collectionSizeLoader);
    await retVal.init('hashtags');
    return retVal;
  }

  /// Default constructor
  HashTagIndex._(this.collectionSizeLoader);

  @override
  TextAnalyzer get analyzer => HashTagAnalyzer();

  @override
  final CollectionSizeCallback collectionSizeLoader;

  @override
  int get k => HashTagAnalyzer.kK;

  @override
  NGramRange? get nGramRange => HashTagAnalyzer.kNGramRange;

  @override
  TokenizingStrategy get strategy => HashTagAnalyzer.kStrategy;

  @override
  TokenFilter? get tokenFilter => null;

  @override
  ZoneWeightMap get zones => HashTagAnalyzer.kZones;
}
